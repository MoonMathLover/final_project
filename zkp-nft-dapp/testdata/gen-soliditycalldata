#!/usr/bin/env python3

import json

def extract_matching_square_brackted_content(s):
    content = []
    depth = 0
    for i, c in enumerate(s):
        if c == '[':
            depth += 1
        elif c == ']':
            depth -= 1
        elif c == ',' and depth == 0:
            continue
        
        content.append(c)

        if depth == 0:
            yield ''.join(content)
            content = []
    if content:
        raise ValueError('content %r' % (content,))

def main():
    with open('lib/fisher-yates/testData/Main_50-50_zkPlayground_groth16.verifier.calldata.txt') as f:
        data = f.read()

    out = {}
    chunk_names = [ 'pA', 'pB', 'pC', 'pubSignals' ]
    for chunk_name, chunk in zip(chunk_names, extract_matching_square_brackted_content(data)):
        #print('chunk:', chunk)
        #print(json.loads(chunk))
        chunk_data = json.loads(chunk)
        out[chunk_name] = chunk_data

    with open('testdata/soliditycalldata.json', 'w') as fout:
        fout.write(json.dumps(out, indent=2))

if __name__ == '__main__':
    main()
